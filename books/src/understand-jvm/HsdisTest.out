CompilerOracle: dontinline HsdisTest.sum
CompilerOracle: compileonly HsdisTest.sum
Loaded disassembler from /Library/Java/JavaVirtualMachines/jdk1.8.0_172.jdk/Contents/Home/jre/lib/server/hsdis-amd64.dylib
Decoding compiled method 0x0000000114c414d0:
Code:
[Disassembling for mach='i386:x86-64']
[Entry Point]
[Constants]
  # {method} {0x000000011171c2a0} 'sum' '(I)I' in 'HsdisTest'
  # this:     rsi:rsi   = 'HsdisTest'
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000114c41640: mov    0x8(%rsi),%r10d
  0x0000000114c41644: shl    $0x3,%r10
  0x0000000114c41648: cmp    %rax,%r10
  0x0000000114c4164b: jne    0x0000000114b84e60  ;   {runtime_call}
  0x0000000114c41651: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000114c4165c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000114c41660: mov    %eax,-0x14000(%rsp)
  0x0000000114c41667: push   %rbp
  0x0000000114c41668: sub    $0x30,%rsp
  0x0000000114c4166c: movabs $0x11171c558,%rax  ;   {metadata(method data for {method} {0x000000011171c2a0} 'sum' '(I)I' in 'HsdisTest')}
  0x0000000114c41676: mov    0xdc(%rax),%edi
  0x0000000114c4167c: add    $0x8,%edi
  0x0000000114c4167f: mov    %edi,0xdc(%rax)
  0x0000000114c41685: movabs $0x11171c2a0,%rax  ;   {metadata({method} {0x000000011171c2a0} 'sum' '(I)I' in 'HsdisTest')}
  0x0000000114c4168f: and    $0x0,%edi
  0x0000000114c41692: cmp    $0x0,%edi
  0x0000000114c41695: je     0x0000000114c416bb  ;*aload_0
                                                ; - HsdisTest::sum@0 (line 10)

  0x0000000114c4169b: mov    0xc(%rsi),%eax     ;*getfield a
                                                ; - HsdisTest::sum@1 (line 10)

  0x0000000114c4169e: movabs $0x76ab71488,%rsi  ;   {oop(a 'java/lang/Class' = 'HsdisTest')}
  0x0000000114c416a8: mov    0x68(%rsi),%esi    ;*getstatic b
                                                ; - HsdisTest::sum@4 (line 10)

  0x0000000114c416ab: add    %esi,%eax
  0x0000000114c416ad: add    %edx,%eax
  0x0000000114c416af: add    $0x30,%rsp
  0x0000000114c416b3: pop    %rbp
  0x0000000114c416b4: test   %eax,-0xeac75ba(%rip)        # 0x000000010617a100
                                                ;   {poll_return}
  0x0000000114c416ba: retq   
  0x0000000114c416bb: mov    %rax,0x8(%rsp)
  0x0000000114c416c0: movq   $0xffffffffffffffff,(%rsp)
  0x0000000114c416c8: callq  0x0000000114c3d2e0  ; OopMap{rsi=Oop off=141}
                                                ;*synchronization entry
                                                ; - HsdisTest::sum@-1 (line 10)
                                                ;   {runtime_call}
  0x0000000114c416cd: jmp    0x0000000114c4169b
  0x0000000114c416cf: nop
  0x0000000114c416d0: nop
  0x0000000114c416d1: mov    0x2a8(%r15),%rax
  0x0000000114c416d8: movabs $0x0,%r10
  0x0000000114c416e2: mov    %r10,0x2a8(%r15)
  0x0000000114c416e9: movabs $0x0,%r10
  0x0000000114c416f3: mov    %r10,0x2b0(%r15)
  0x0000000114c416fa: add    $0x30,%rsp
  0x0000000114c416fe: pop    %rbp
  0x0000000114c416ff: jmpq   0x0000000114bab6e0  ;   {runtime_call}
  0x0000000114c41704: hlt    
  0x0000000114c41705: hlt    
  0x0000000114c41706: hlt    
  0x0000000114c41707: hlt    
  0x0000000114c41708: hlt    
  0x0000000114c41709: hlt    
  0x0000000114c4170a: hlt    
  0x0000000114c4170b: hlt    
  0x0000000114c4170c: hlt    
  0x0000000114c4170d: hlt    
  0x0000000114c4170e: hlt    
  0x0000000114c4170f: hlt    
  0x0000000114c41710: hlt    
  0x0000000114c41711: hlt    
  0x0000000114c41712: hlt    
  0x0000000114c41713: hlt    
  0x0000000114c41714: hlt    
  0x0000000114c41715: hlt    
  0x0000000114c41716: hlt    
  0x0000000114c41717: hlt    
  0x0000000114c41718: hlt    
  0x0000000114c41719: hlt    
  0x0000000114c4171a: hlt    
  0x0000000114c4171b: hlt    
  0x0000000114c4171c: hlt    
  0x0000000114c4171d: hlt    
  0x0000000114c4171e: hlt    
  0x0000000114c4171f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000114c41720: callq  0x0000000114c3ab20  ;   {no_reloc}
  0x0000000114c41725: mov    %rsp,-0x28(%rsp)
  0x0000000114c4172a: sub    $0x80,%rsp
  0x0000000114c41731: mov    %rax,0x78(%rsp)
  0x0000000114c41736: mov    %rcx,0x70(%rsp)
  0x0000000114c4173b: mov    %rdx,0x68(%rsp)
  0x0000000114c41740: mov    %rbx,0x60(%rsp)
  0x0000000114c41745: mov    %rbp,0x50(%rsp)
  0x0000000114c4174a: mov    %rsi,0x48(%rsp)
  0x0000000114c4174f: mov    %rdi,0x40(%rsp)
  0x0000000114c41754: mov    %r8,0x38(%rsp)
  0x0000000114c41759: mov    %r9,0x30(%rsp)
  0x0000000114c4175e: mov    %r10,0x28(%rsp)
  0x0000000114c41763: mov    %r11,0x20(%rsp)
  0x0000000114c41768: mov    %r12,0x18(%rsp)
  0x0000000114c4176d: mov    %r13,0x10(%rsp)
  0x0000000114c41772: mov    %r14,0x8(%rsp)
  0x0000000114c41777: mov    %r15,(%rsp)
  0x0000000114c4177b: movabs $0x106fde348,%rdi  ;   {external_word}
  0x0000000114c41785: movabs $0x114c41725,%rsi  ;   {internal_word}
  0x0000000114c4178f: mov    %rsp,%rdx
  0x0000000114c41792: and    $0xfffffffffffffff0,%rsp
  0x0000000114c41796: callq  0x0000000106e07426  ;   {runtime_call}
  0x0000000114c4179b: hlt    
[Deopt Handler Code]
  0x0000000114c4179c: movabs $0x114c4179c,%r10  ;   {section_word}
  0x0000000114c417a6: push   %r10
  0x0000000114c417a8: jmpq   0x0000000114b86500  ;   {runtime_call}
  0x0000000114c417ad: hlt    
  0x0000000114c417ae: hlt    
  0x0000000114c417af: hlt    
Decoding compiled method 0x0000000114c41190:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011171c2a0} 'sum' '(I)I' in 'HsdisTest'
  # this:     rsi:rsi   = 'HsdisTest'
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000114c412e0: mov    0x8(%rsi),%r10d
  0x0000000114c412e4: shl    $0x3,%r10
  0x0000000114c412e8: cmp    %rax,%r10
  0x0000000114c412eb: jne    0x0000000114b84e60  ;   {runtime_call}
  0x0000000114c412f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000114c412fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000114c41300: mov    %eax,-0x14000(%rsp)
  0x0000000114c41307: push   %rbp
  0x0000000114c41308: sub    $0x30,%rsp         ;*aload_0
                                                ; - HsdisTest::sum@0 (line 10)

  0x0000000114c4130c: mov    0xc(%rsi),%eax     ;*getfield a
                                                ; - HsdisTest::sum@1 (line 10)

  0x0000000114c4130f: movabs $0x76ab71488,%rsi  ;   {oop(a 'java/lang/Class' = 'HsdisTest')}
  0x0000000114c41319: mov    0x68(%rsi),%esi    ;*getstatic b
                                                ; - HsdisTest::sum@4 (line 10)

  0x0000000114c4131c: add    %esi,%eax
  0x0000000114c4131e: add    %edx,%eax
  0x0000000114c41320: add    $0x30,%rsp
  0x0000000114c41324: pop    %rbp
  0x0000000114c41325: test   %eax,-0xeac722b(%rip)        # 0x000000010617a100
                                                ;   {poll_return}
  0x0000000114c4132b: retq   
  0x0000000114c4132c: nop
  0x0000000114c4132d: nop
  0x0000000114c4132e: mov    0x2a8(%r15),%rax
  0x0000000114c41335: movabs $0x0,%r10
  0x0000000114c4133f: mov    %r10,0x2a8(%r15)
  0x0000000114c41346: movabs $0x0,%r10
  0x0000000114c41350: mov    %r10,0x2b0(%r15)
  0x0000000114c41357: add    $0x30,%rsp
  0x0000000114c4135b: pop    %rbp
  0x0000000114c4135c: jmpq   0x0000000114bab6e0  ;   {runtime_call}
  0x0000000114c41361: hlt    
  0x0000000114c41362: hlt    
  0x0000000114c41363: hlt    
  0x0000000114c41364: hlt    
  0x0000000114c41365: hlt    
  0x0000000114c41366: hlt    
  0x0000000114c41367: hlt    
  0x0000000114c41368: hlt    
  0x0000000114c41369: hlt    
  0x0000000114c4136a: hlt    
  0x0000000114c4136b: hlt    
  0x0000000114c4136c: hlt    
  0x0000000114c4136d: hlt    
  0x0000000114c4136e: hlt    
  0x0000000114c4136f: hlt    
  0x0000000114c41370: hlt    
  0x0000000114c41371: hlt    
  0x0000000114c41372: hlt    
  0x0000000114c41373: hlt    
  0x0000000114c41374: hlt    
  0x0000000114c41375: hlt    
  0x0000000114c41376: hlt    
  0x0000000114c41377: hlt    
  0x0000000114c41378: hlt    
  0x0000000114c41379: hlt    
  0x0000000114c4137a: hlt    
  0x0000000114c4137b: hlt    
  0x0000000114c4137c: hlt    
  0x0000000114c4137d: hlt    
  0x0000000114c4137e: hlt    
  0x0000000114c4137f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000114c41380: callq  0x0000000114c3ab20  ;   {no_reloc}
  0x0000000114c41385: mov    %rsp,-0x28(%rsp)
  0x0000000114c4138a: sub    $0x80,%rsp
  0x0000000114c41391: mov    %rax,0x78(%rsp)
  0x0000000114c41396: mov    %rcx,0x70(%rsp)
  0x0000000114c4139b: mov    %rdx,0x68(%rsp)
  0x0000000114c413a0: mov    %rbx,0x60(%rsp)
  0x0000000114c413a5: mov    %rbp,0x50(%rsp)
  0x0000000114c413aa: mov    %rsi,0x48(%rsp)
  0x0000000114c413af: mov    %rdi,0x40(%rsp)
  0x0000000114c413b4: mov    %r8,0x38(%rsp)
  0x0000000114c413b9: mov    %r9,0x30(%rsp)
  0x0000000114c413be: mov    %r10,0x28(%rsp)
  0x0000000114c413c3: mov    %r11,0x20(%rsp)
  0x0000000114c413c8: mov    %r12,0x18(%rsp)
  0x0000000114c413cd: mov    %r13,0x10(%rsp)
  0x0000000114c413d2: mov    %r14,0x8(%rsp)
  0x0000000114c413d7: mov    %r15,(%rsp)
  0x0000000114c413db: movabs $0x106fde348,%rdi  ;   {external_word}
  0x0000000114c413e5: movabs $0x114c41385,%rsi  ;   {internal_word}
  0x0000000114c413ef: mov    %rsp,%rdx
  0x0000000114c413f2: and    $0xfffffffffffffff0,%rsp
  0x0000000114c413f6: callq  0x0000000106e07426  ;   {runtime_call}
  0x0000000114c413fb: hlt    
[Deopt Handler Code]
  0x0000000114c413fc: movabs $0x114c413fc,%r10  ;   {section_word}
  0x0000000114c41406: push   %r10
  0x0000000114c41408: jmpq   0x0000000114b86500  ;   {runtime_call}
  0x0000000114c4140d: hlt    
  0x0000000114c4140e: hlt    
  0x0000000114c4140f: hlt    
